#!/usr/bin/env bash
#shellcheck disable=SC2155,SC2034,SC1135
#shellcheck source=/dev/null

#  /usr/bin/big-restore-config
#  Description: Central de controle para restaurar configurações de ambiente e aplicativos
#
#  Created: 2020/09/01
#  Altered: 2024/07/02
#
#  Copyright (c) 2023-2024, Vilmar Catafesta <vcatafesta@gmail.com>
#                2020-2023, Bruno Gonçalves <www.biglinux.com.br>
#                2020-2023, Rafael Ruscher <rruscher@gmail.com>
#                2020-2023, eltonff        <www.biglinux.com.br>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

APP="${0##*/}"
_VERSION_="1.0.0-20240702"
export BOOTLOG="/tmp/big-restore-config-$USER-$(date +"%d%m%Y").log"
export LOGGER='/dev/tty8'
export HOME_FOLDER="$HOME/.big-restore-config"
export TMP_FOLDER="/tmp/big-restore-config-$USER"
export INI_FILE_BIG_CONFIG="$HOME_FOLDER/big-restore-config.ini"
LIBRARY=${LIBRARY:-'/usr/share/bigbashview/bcc/shell'}
[[ -f "${LIBRARY}/bcclib.sh" ]] && source "${LIBRARY}/bcclib.sh"
[[ -f "${LIBRARY}/tinilib.sh" ]] && source "${LIBRARY}/tinilib.sh"
[[ -f "${LIBRARY}/bcfglib.sh" ]] && source "${LIBRARY}/bcfglib.sh"
export XDG_RUNTIME="${XDG_RUNTIME:-/run/user/$(id -g)}"

function sh_big_config() {
	#desabilitando variáveis proxy do dde, as mesmas não permitem atualizações do pamac
	unset auto_proxy ftp_proxy http_proxy https_proxy no_proxy all_proxy
	#Translation
	export TEXTDOMAINDIR="/usr/share/locale"
	export TEXTDOMAIN=biglinux-config
	declare -g bigconfigpath='/usr/share/bigbashview/bcc/apps/big-restore-config'
	declare -g bigconfig_icon_file='icons/icon.png'
	declare -g TITLE="Big-Restore-Config - Restaurar Configurações de Aplicativos"
	declare -gA Amsg=(
		[error_open]=$(gettext $"Outra instância do Big-Restore-Config já está em execução.")
		[error_access_dir]=$(gettext $"Erro ao acessar o diretório:")
	)
}

function sh_big_config_check_dirs {
	[[ ! -d "$HOME_FOLDER" ]] && mkdir -p "$HOME_FOLDER" "$TMP_FOLDER"
	[[ ! -d "$TMP_FOLDER" ]] && mkdir -p "$TMP_FOLDER"
}
export -f sh_big_config_check_dirs

function sh_check_big_config_is_running() {
	local PID

	if PID=$(pgrep -f 'Big-Restore-Config') && [[ -n "$PID" ]]; then
		#		notify-send -u critical --icon=big-store --app-name "$0" "$TITLE" "${Amsg[error_open]}" --expire-time=2000
		#		kdialog --title "$TITLE" --icon warning --msgbox "${Amsg[error_open]}"
		yad --title "$TITLE" --image=big-restore-config --text "${Amsg[error_open]}\nPID:$PID" --button="OK":0
		exit 1
	fi
}
export -f sh_check_big_config_is_running

function sh_big_config_main {
	local default_size='960x720'
	local height
	local widht
	local half_height
	local half_widht
	local processamento_em_paralelo=1
	local ident_keys=1

	sh_big_config_check_dirs
	cd "$bigconfigpath" || {
		notify-send --icon=big-restore-config --app-name "$0" "$TITLE" "${Amsg[error_access_dir]}\n$bigconfigpath" --expire-time=2000
		return 1
	}

	# reformat pretry .ini
	[[ -e "$INI_FILE_BIG_CONFIG" ]] && TIni.Sanitize "$INI_FILE_BIG_CONFIG"

	# Obtém a largura da tela primária usando xrandr
	if width=$(xrandr | grep -oP 'primary \K[0-9]+(?=x)') && [[ -n "$width" ]]; then
		# Se a largura foi obtida, tenta obter a altura da tela primária
		if height=$(xrandr | grep -oP 'primary \K[0-9]+x\K[0-9]+') && [[ -n "$height" ]]; then
			# Calcula metade da largura e altura
			half_width=$((width / 2))
			half_height=$((height / 2 * 3 / 2))
			# Atualiza o tamanho padrão com metade da largura e altura da tela
			default_size="${half_width}x${half_height}"
		fi
	fi

	# Save dynamic screenshot resolution
	echo "$half_height" >"${TMP_FOLDER}/screenshot-resolution.txt"

	_session="$(sh_get_desktop_session)"
	case "${_session^^}" in
	X11)
		QT_QPA_PLATFORM=xcb \
			SDL_VIDEODRIVER=x11 \
			WINIT_UNIX_BACKEND=x11 \
			GDK_BACKEND=x11 \
			bigbashview index.sh.htm \
			-n "$TITLE" \
			-s "${default_size}" \
			-i "$bigconfig_icon_file" \
			-d "$bigconfigpath"
		;;
	WAYLAND)
		MOZ_ENABLE_WAYLAND=1 \
			bigbashview index.sh.htm \
			-n "$TITLE" \
			-s "${default_size}" \
			-i "$bigconfig_icon_file" \
			-d "$bigconfigpath"
		;;
	*)
		QT_QPA_PLATFORM=xcb \
			SDL_VIDEODRIVER=x11 \
			WINIT_UNIX_BACKEND=x11 \
			GDK_BACKEND=x11 \
			bigbashview index.sh.htm \
			-n "$TITLE" \
			-s "${default_size}" \
			-i "$bigconfig_icon_file" \
			-d "$bigconfigpath"
		;;
	esac
}

#sh_debug
sh_big_config
sh_check_big_config_is_running
sh_big_config_main "$@"
